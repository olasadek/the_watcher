version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: the-watcher-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: the_watcher
    networks:
      - the-watcher-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/the_watcher --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: the-watcher-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - the-watcher-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: the-watcher-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:8001
      - REACT_APP_WS_URL=ws://localhost:8001
    networks:
      - the-watcher-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: the-watcher-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - the-watcher-network
    profiles:
      - production

volumes:
  mongo_data:
    driver: local

networks:
  the-watcher-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
